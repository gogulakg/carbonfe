{
  "version": 3,
  "sources": ["../../react-bootstrap/esm/createWithBsPrefix.js", "../../dom-helpers/esm/camelize.js", "../../react-bootstrap/esm/FormCheckInput.js", "../../react-bootstrap/esm/FormContext.js"],
  "sourcesContent": ["import classNames from 'classnames';\r\nimport camelize from 'dom-helpers/camelize';\r\nimport * as React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\r\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\r\nexport default function createWithBsPrefix(prefix, {\r\n  displayName = pascalCase(prefix),\r\n  Component,\r\n  defaultProps\r\n} = {}) {\r\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\r\n    className,\r\n    bsPrefix,\r\n    as: Tag = Component || 'div',\r\n    ...props\r\n  }, ref) => {\r\n    const componentProps = {\r\n      ...defaultProps,\r\n      ...props\r\n    };\r\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\r\n    return /*#__PURE__*/_jsx(Tag, {\r\n      ref: ref,\r\n      className: classNames(className, resolvedPrefix),\r\n      ...componentProps\r\n    });\r\n  });\r\n  BsComponent.displayName = displayName;\r\n  return BsComponent;\r\n}", "var rHyphen = /-(.)/g;\r\nexport default function camelize(string) {\r\n  return string.replace(rHyphen, function (_, chr) {\r\n    return chr.toUpperCase();\r\n  });\r\n}", "import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport FormContext from './FormContext';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\r\n  id,\r\n  bsPrefix,\r\n  className,\r\n  type = 'checkbox',\r\n  isValid = false,\r\n  isInvalid = false,\r\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n  as: Component = 'input',\r\n  ...props\r\n}, ref) => {\r\n  const {\r\n    controlId\r\n  } = useContext(FormContext);\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\r\n  return /*#__PURE__*/_jsx(Component, {\r\n    ...props,\r\n    ref: ref,\r\n    type: type,\r\n    id: id || controlId,\r\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\r\n  });\r\n});\r\nFormCheckInput.displayName = 'FormCheckInput';\r\nexport default FormCheckInput;", "import * as React from 'react';\r\n\r\n// TODO\r\n\r\nconst FormContext = /*#__PURE__*/React.createContext({});\r\nexport default FormContext;"],
  "mappings": ";;;;;;;;;;;;;AAAA,wBAAuB;;;ACAvB,IAAI,UAAU;AACC,SAAR,SAA0B,QAAQ;AACvC,SAAO,OAAO,QAAQ,SAAS,SAAU,GAAG,KAAK;AAC/C,WAAO,IAAI,YAAY;AAAA,EACzB,CAAC;AACH;;;ADHA,YAAuB;AAEvB,yBAA4B;AAC5B,IAAM,aAAa,SAAO,IAAI,CAAC,EAAE,YAAY,IAAI,SAAS,GAAG,EAAE,MAAM,CAAC;AAEvD,SAAR,mBAAoC,QAAQ;AAAA,EACjD,cAAc,WAAW,MAAM;AAAA,EAC/B;AAAA,EACA;AACF,IAAI,CAAC,GAAG;AACN,QAAM,cAAiC,iBAAW,CAAC;AAAA,IACjD;AAAA,IACA;AAAA,IACA,IAAI,MAAM,aAAa;AAAA,IACvB,GAAG;AAAA,EACL,GAAG,QAAQ;AACT,UAAM,iBAAiB;AAAA,MACrB,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AACA,UAAM,iBAAiB,mBAAmB,UAAU,MAAM;AAC1D,eAAoB,mBAAAA,KAAK,KAAK;AAAA,MAC5B;AAAA,MACA,eAAW,kBAAAC,SAAW,WAAW,cAAc;AAAA,MAC/C,GAAG;AAAA,IACL,CAAC;AAAA,EACH,CAAC;AACD,cAAY,cAAc;AAC1B,SAAO;AACT;;;AE/BA,IAAAC,qBAAuB;AACvB,IAAAC,SAAuB;AACvB,mBAA2B;;;ACF3B,IAAAC,SAAuB;AAIvB,IAAM,cAAiC,qBAAc,CAAC,CAAC;AACvD,IAAO,sBAAQ;;;ADAf,IAAAC,sBAA4B;AAC5B,IAAM,iBAAoC,kBAAW,CAAC;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AAAA;AAAA,EAEZ,IAAI,YAAY;AAAA,EAChB,GAAG;AACL,GAAG,QAAQ;AACT,QAAM;AAAA,IACJ;AAAA,EACF,QAAI,yBAAW,mBAAW;AAC1B,aAAW,mBAAmB,UAAU,kBAAkB;AAC1D,aAAoB,oBAAAC,KAAK,WAAW;AAAA,IAClC,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,IAAI,MAAM;AAAA,IACV,eAAW,mBAAAC,SAAW,WAAW,UAAU,WAAW,YAAY,aAAa,YAAY;AAAA,EAC7F,CAAC;AACH,CAAC;AACD,eAAe,cAAc;AAC7B,IAAO,yBAAQ;",
  "names": ["_jsx", "classNames", "import_classnames", "React", "React", "import_jsx_runtime", "_jsx", "classNames"]
}
